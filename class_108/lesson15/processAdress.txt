                 进程地址空间                                                    物理地址
          |-------------------------|                                       |----------------|
          |                         |                                       |                |
          |           栈            |                                       |                |
          |-------------------------|                                       |                |
          |                         |                                       |                |
          |       栈堆共享区        |                   页表                |                |
          |                         |           --------------------        |                |
          |-------------------------|           |虚拟地址| 物理地址|        |                |
          |           堆            |           ---------|----------        |                |
          |                         |    ==>    |0x1234  | 0x1145  |  ==>   |----------------|
          |    未初始化全局变量     |           ---------|----------        | &g_val->0x1145 |
          |                         |           |0x5201  | 0x1314  |        |----------------|
          |    已初始化全局变量     |           --------------------        |                |
          |                         |                                       |                |
          |       字符常量区        |                                       |                |
          |                         |                                       |                |
          |         代码段          |                                       |                |
          |                         |                                       |                |
          |-------------------------|                                       |----------------|



谈细节：

1.地址空间到底是什么？
进程空间就是地址总线排列组合形成的范围，如32位[0, 2^32]

2.如何理解地址空间上的区域划分？
小时候和同桌把一个桌子分成两半，"38"线就是一个区域划分

3.所谓的进程地址空间是什么？
本质上是描述一个进程可视空间的大小，对地址空间有各种区域划分，对线性地址进行start和end即可


为什么要有进程地址空间？
1.让进程以统一的视角看内存

2.增加进程虚拟地址空间可以让我们访问内存的时候增加一个访问的过程，在这个过程中可以对我们进行寻址审查，如果是异常访问可以直接拒绝
  可以达成保护物理内存的作用

3.可以将进程管理模块，和内存管理模块进行解耦合


页表的结构：
页表的地址存在cr3寄存器中，页表的地址是物理地址，每一个进程都有自己的页表地址，属于进程的上下文
页表还可以帮助我们管理权限，除了储存地址以外，还会储存权限rwx
-----------------------------------------------------------------------------------
| 虚拟地址 | 物理地址 | 标志位（标记权限）| 标记位（对应代码是否已经被加载到内存）|
|----------|----------|-------------------|---------------------------------------|
|----------|----------|-------------------|---------------------------------------|
|----------|----------|-------------------|---------------------------------------|
-----------------------------------------------------------------------------------

进程在创建的时候要线创建内核数据结构，再加载可执行程序






